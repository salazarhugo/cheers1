// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: cheers/friendship/v1/friendship_service.proto

package friendship

import (
	user "github.com/salazarhugo/cheers1/gen/go/cheers/type/user"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AcceptFriendRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AcceptFriendRequestRequest) Reset() {
	*x = AcceptFriendRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptFriendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptFriendRequestRequest) ProtoMessage() {}

func (x *AcceptFriendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptFriendRequestRequest.ProtoReflect.Descriptor instead.
func (*AcceptFriendRequestRequest) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{0}
}

func (x *AcceptFriendRequestRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AcceptFriendRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptFriendRequestResponse) Reset() {
	*x = AcceptFriendRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptFriendRequestResponse) ProtoMessage() {}

func (x *AcceptFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*AcceptFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{1}
}

type DeleteFriendRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteFriendRequestRequest) Reset() {
	*x = DeleteFriendRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequestRequest) ProtoMessage() {}

func (x *DeleteFriendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequestRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequestRequest) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteFriendRequestRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteFriendRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFriendRequestResponse) Reset() {
	*x = DeleteFriendRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequestResponse) ProtoMessage() {}

func (x *DeleteFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{3}
}

type DeleteFriendRequest2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId       string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	FriendshipId string `protobuf:"bytes,2,opt,name=friendship_id,json=friendshipId,proto3" json:"friendship_id,omitempty"`
}

func (x *DeleteFriendRequest2) Reset() {
	*x = DeleteFriendRequest2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendRequest2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequest2) ProtoMessage() {}

func (x *DeleteFriendRequest2) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequest2.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequest2) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteFriendRequest2) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *DeleteFriendRequest2) GetFriendshipId() string {
	if x != nil {
		return x.FriendshipId
	}
	return ""
}

type DeleteFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFriendResponse) Reset() {
	*x = DeleteFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendResponse) ProtoMessage() {}

func (x *DeleteFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendResponse.ProtoReflect.Descriptor instead.
func (*DeleteFriendResponse) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{5}
}

type ListFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ListFriendRequest) Reset() {
	*x = ListFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendRequest) ProtoMessage() {}

func (x *ListFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendRequest.ProtoReflect.Descriptor instead.
func (*ListFriendRequest) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListFriendRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*FriendshipItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListFriendResponse) Reset() {
	*x = ListFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendResponse) ProtoMessage() {}

func (x *ListFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendResponse.ProtoReflect.Descriptor instead.
func (*ListFriendResponse) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListFriendResponse) GetItems() []*FriendshipItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListFriendRequestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *ListFriendRequestsRequest) Reset() {
	*x = ListFriendRequestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendRequestsRequest) ProtoMessage() {}

func (x *ListFriendRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendRequestsRequest.ProtoReflect.Descriptor instead.
func (*ListFriendRequestsRequest) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListFriendRequestsRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type ListFriendRequestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*user.UserItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListFriendRequestsResponse) Reset() {
	*x = ListFriendRequestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFriendRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendRequestsResponse) ProtoMessage() {}

func (x *ListFriendRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendRequestsResponse.ProtoReflect.Descriptor instead.
func (*ListFriendRequestsResponse) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListFriendRequestsResponse) GetItems() []*user.UserItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type FriendshipItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friendship *Friendship    `protobuf:"bytes,1,opt,name=friendship,proto3" json:"friendship,omitempty"`
	UserItem   *user.UserItem `protobuf:"bytes,2,opt,name=user_item,json=userItem,proto3" json:"user_item,omitempty"`
}

func (x *FriendshipItem) Reset() {
	*x = FriendshipItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendshipItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendshipItem) ProtoMessage() {}

func (x *FriendshipItem) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendshipItem.ProtoReflect.Descriptor instead.
func (*FriendshipItem) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{10}
}

func (x *FriendshipItem) GetFriendship() *Friendship {
	if x != nil {
		return x.Friendship
	}
	return nil
}

func (x *FriendshipItem) GetUserItem() *user.UserItem {
	if x != nil {
		return x.UserItem
	}
	return nil
}

type Friendship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text       string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	CreateTime int64  `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UserId     string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PostId     string `protobuf:"bytes,4,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *Friendship) Reset() {
	*x = Friendship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Friendship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friendship) ProtoMessage() {}

func (x *Friendship) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friendship.ProtoReflect.Descriptor instead.
func (*Friendship) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{11}
}

func (x *Friendship) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Friendship) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Friendship) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Friendship) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Friendship) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type CreateFriendRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CreateFriendRequestRequest) Reset() {
	*x = CreateFriendRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFriendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFriendRequestRequest) ProtoMessage() {}

func (x *CreateFriendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFriendRequestRequest.ProtoReflect.Descriptor instead.
func (*CreateFriendRequestRequest) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{12}
}

func (x *CreateFriendRequestRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateFriendRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateFriendRequestResponse) Reset() {
	*x = CreateFriendRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFriendRequestResponse) ProtoMessage() {}

func (x *CreateFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cheers_friendship_v1_friendship_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*CreateFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP(), []int{13}
}

var File_cheers_friendship_v1_friendship_service_proto protoreflect.FileDescriptor

var file_cheers_friendship_v1_friendship_service_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x68, 0x69, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69,
	0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x14, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x35, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1d, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x32, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x34, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x49, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x40,
	0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x12, 0x32, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x22, 0x83, 0x01, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x68, 0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x80, 0x07, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x2e, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f,
	0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12,
	0x9d, 0x01, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73,
	0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x68, 0x65, 0x65,
	0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12,
	0x78, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x27, 0x2e,
	0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x98, 0x01, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x2f, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x9b, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x63,
	0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x7f, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x12, 0x2a, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0x1a, 0x2a,
	0x2e, 0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x73, 0x42, 0x49, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x6c, 0x61, 0x7a, 0x61, 0x72, 0x68, 0x75, 0x67, 0x6f, 0x2f,
	0x63, 0x68, 0x65, 0x65, 0x72, 0x73, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63,
	0x68, 0x65, 0x65, 0x72, 0x73, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x2f, 0x76, 0x31, 0x3b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cheers_friendship_v1_friendship_service_proto_rawDescOnce sync.Once
	file_cheers_friendship_v1_friendship_service_proto_rawDescData = file_cheers_friendship_v1_friendship_service_proto_rawDesc
)

func file_cheers_friendship_v1_friendship_service_proto_rawDescGZIP() []byte {
	file_cheers_friendship_v1_friendship_service_proto_rawDescOnce.Do(func() {
		file_cheers_friendship_v1_friendship_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_cheers_friendship_v1_friendship_service_proto_rawDescData)
	})
	return file_cheers_friendship_v1_friendship_service_proto_rawDescData
}

var file_cheers_friendship_v1_friendship_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_cheers_friendship_v1_friendship_service_proto_goTypes = []interface{}{
	(*AcceptFriendRequestRequest)(nil),  // 0: cheers.friendship.v1.AcceptFriendRequestRequest
	(*AcceptFriendRequestResponse)(nil), // 1: cheers.friendship.v1.AcceptFriendRequestResponse
	(*DeleteFriendRequestRequest)(nil),  // 2: cheers.friendship.v1.DeleteFriendRequestRequest
	(*DeleteFriendRequestResponse)(nil), // 3: cheers.friendship.v1.DeleteFriendRequestResponse
	(*DeleteFriendRequest2)(nil),        // 4: cheers.friendship.v1.DeleteFriendRequest2
	(*DeleteFriendResponse)(nil),        // 5: cheers.friendship.v1.DeleteFriendResponse
	(*ListFriendRequest)(nil),           // 6: cheers.friendship.v1.ListFriendRequest
	(*ListFriendResponse)(nil),          // 7: cheers.friendship.v1.ListFriendResponse
	(*ListFriendRequestsRequest)(nil),   // 8: cheers.friendship.v1.ListFriendRequestsRequest
	(*ListFriendRequestsResponse)(nil),  // 9: cheers.friendship.v1.ListFriendRequestsResponse
	(*FriendshipItem)(nil),              // 10: cheers.friendship.v1.FriendshipItem
	(*Friendship)(nil),                  // 11: cheers.friendship.v1.Friendship
	(*CreateFriendRequestRequest)(nil),  // 12: cheers.friendship.v1.CreateFriendRequestRequest
	(*CreateFriendRequestResponse)(nil), // 13: cheers.friendship.v1.CreateFriendRequestResponse
	(*user.UserItem)(nil),               // 14: cheers.type.UserItem
}
var file_cheers_friendship_v1_friendship_service_proto_depIdxs = []int32{
	10, // 0: cheers.friendship.v1.ListFriendResponse.items:type_name -> cheers.friendship.v1.FriendshipItem
	14, // 1: cheers.friendship.v1.ListFriendRequestsResponse.items:type_name -> cheers.type.UserItem
	11, // 2: cheers.friendship.v1.FriendshipItem.friendship:type_name -> cheers.friendship.v1.Friendship
	14, // 3: cheers.friendship.v1.FriendshipItem.user_item:type_name -> cheers.type.UserItem
	12, // 4: cheers.friendship.v1.FriendshipService.CreateFriendRequest:input_type -> cheers.friendship.v1.CreateFriendRequestRequest
	0,  // 5: cheers.friendship.v1.FriendshipService.AcceptFriendRequest:input_type -> cheers.friendship.v1.AcceptFriendRequestRequest
	6,  // 6: cheers.friendship.v1.FriendshipService.ListFriend:input_type -> cheers.friendship.v1.ListFriendRequest
	8,  // 7: cheers.friendship.v1.FriendshipService.ListFriendRequests:input_type -> cheers.friendship.v1.ListFriendRequestsRequest
	2,  // 8: cheers.friendship.v1.FriendshipService.DeleteFriendRequest:input_type -> cheers.friendship.v1.DeleteFriendRequestRequest
	4,  // 9: cheers.friendship.v1.FriendshipService.DeleteFriend:input_type -> cheers.friendship.v1.DeleteFriendRequest2
	13, // 10: cheers.friendship.v1.FriendshipService.CreateFriendRequest:output_type -> cheers.friendship.v1.CreateFriendRequestResponse
	1,  // 11: cheers.friendship.v1.FriendshipService.AcceptFriendRequest:output_type -> cheers.friendship.v1.AcceptFriendRequestResponse
	7,  // 12: cheers.friendship.v1.FriendshipService.ListFriend:output_type -> cheers.friendship.v1.ListFriendResponse
	9,  // 13: cheers.friendship.v1.FriendshipService.ListFriendRequests:output_type -> cheers.friendship.v1.ListFriendRequestsResponse
	3,  // 14: cheers.friendship.v1.FriendshipService.DeleteFriendRequest:output_type -> cheers.friendship.v1.DeleteFriendRequestResponse
	5,  // 15: cheers.friendship.v1.FriendshipService.DeleteFriend:output_type -> cheers.friendship.v1.DeleteFriendResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_cheers_friendship_v1_friendship_service_proto_init() }
func file_cheers_friendship_v1_friendship_service_proto_init() {
	if File_cheers_friendship_v1_friendship_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptFriendRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptFriendRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendRequest2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendRequestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFriendRequestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendshipItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Friendship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFriendRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheers_friendship_v1_friendship_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFriendRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cheers_friendship_v1_friendship_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cheers_friendship_v1_friendship_service_proto_goTypes,
		DependencyIndexes: file_cheers_friendship_v1_friendship_service_proto_depIdxs,
		MessageInfos:      file_cheers_friendship_v1_friendship_service_proto_msgTypes,
	}.Build()
	File_cheers_friendship_v1_friendship_service_proto = out.File
	file_cheers_friendship_v1_friendship_service_proto_rawDesc = nil
	file_cheers_friendship_v1_friendship_service_proto_goTypes = nil
	file_cheers_friendship_v1_friendship_service_proto_depIdxs = nil
}
