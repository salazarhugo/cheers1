syntax = "proto3";

package cheers.auth.v1;

import "cheers/type/user/user.proto";
import "google/api/annotations.proto";

option java_multiple_files = true;
option go_package = "github.com/salazarhugo/cheers1/gen/go/cheers/auth/v1;auth";

service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/auth/login"
      body: "*"
    };
  }

  rpc BeginLogin(BeginLoginRequest) returns (BeginLoginResponse) {
    option (google.api.http) = {
      get: "/v1/auth/login/begin/{username}"
    };
  }

  rpc FinishLogin(FinishLoginRequest) returns (FinishLoginResponse) {
    option (google.api.http) = {
      post: "/v1/auth/login/finish"
      body: "*"
    };
  }

  rpc BeginRegistration(BeginRegistrationRequest) returns (BeginRegistrationResponse) {
    option (google.api.http) = {
      get: "/v1/auth/register/begin/{username}"
    };
  }

  rpc FinishRegistration(FinishRegistrationRequest) returns (FinishRegistrationResponse) {
    option (google.api.http) = {
      post: "/v1/auth/register/finish"
      body: "*"
    };
  }

  rpc CreateModerator(CreateModeratorRequest) returns (CreateModeratorResponse) {
    option (google.api.http) = {
      post: "/v1/auths/moderator"
      body: "*"
    };
  }

  rpc DeleteModerator(DeleteModeratorRequest) returns (DeleteModeratorResponse) {
    option (google.api.http) = {
      delete: "/v1/auths/moderator"
    };
  }

  rpc CreateBusinessAccount(CreateBusinessAccountRequest) returns (CreateBusinessAccountResponse) {
    option (google.api.http) = {
      post: "/v1/auths/business"
      body: "*"
    };
  }

  rpc VerifyUser(VerifyUserRequest) returns (VerifyUserResponse) {
    option (google.api.http) = {
      post: "/v1/auths/verify"
      body: "*"
    };
  }

  rpc DeleteVerifyUser(VerifyUserRequest) returns (VerifyUserResponse) {
    option (google.api.http) = {
      delete: "/v1/auths/verify"
    };
  }
}

message BeginLoginRequest {
  string username = 1;
}

message BeginLoginResponse {
  uint64 user_id = 1;
  string challenge = 2;
  string relying_party_id = 3;
  string user_verification = 4;
}

message FinishLoginRequest {
  string username = 1;
  GetPasskeyResponseData passkey = 2;
  string challenge = 3;
}

message FinishLoginResponse {
  cheers.type.User user = 1;
  string token = 2;
}

message BeginRegistrationRequest {
  string username = 1;
}

message BeginRegistrationResponse {
  uint64 user_id = 1;
  string challenge = 2;
}

message FinishRegistrationRequest {
  string email = 1;
  string username = 2;
  CreatePasskeyResponseData passkey = 3;
  uint64 user_id = 4;
  string challenge = 5;
}

message FinishRegistrationResponse {
  cheers.type.User user = 1;
}

message GetPasskeyResponseData {
  string id = 1;
  string raw_id = 2;
  string type = 3;
  GetPasskeyResponse response = 4;
}

message GetPasskeyResponse {
  string authenticator_data = 1;
  string client_data_JSON = 2;
  string signature = 3;
  string user_handle = 4;
}

message CreatePasskeyResponseData {
  string id = 1;
  string raw_id = 2;
  string type = 3;
  Response response = 4;
}

message Response {
  string attestation_object = 1;
  string client_data_JSON = 2;
}

message LoginRequest {
  string id_token = 1;
}

message LoginResponse {
  cheers.type.User user = 1;
}

message VerifyUserRequest {
  string user_id = 1;
}

message VerifyUserResponse {
}

message DeleteModeratorRequest {
  string user_id = 1;
}

message DeleteModeratorResponse {
}

message CreateModeratorRequest {
  string user_id = 1;
}

message CreateModeratorResponse {
}

message CreateBusinessAccountRequest {
  string user_id = 1;
}

message CreateBusinessAccountResponse {
}
