// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cheers/user.proto

package cheers

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Verified             bool     `protobuf:"varint,4,opt,name=verified,proto3" json:"verified,omitempty"`
	Username             string   `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Picture              string   `protobuf:"bytes,6,opt,name=picture,proto3" json:"picture,omitempty"`
	Bio                  string   `protobuf:"bytes,7,opt,name=bio,proto3" json:"bio,omitempty"`
	Website              string   `protobuf:"bytes,8,opt,name=website,proto3" json:"website,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,9,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Created              float32  `protobuf:"fixed32,10,opt,name=created,proto3" json:"created,omitempty"`
	RegistrationTokens   []string `protobuf:"bytes,11,rep,name=registration_tokens,json=registrationTokens,proto3" json:"registration_tokens,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_c23a3c39f2a5c2d2, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *User) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

func (m *User) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *User) GetCreated() float32 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *User) GetRegistrationTokens() []string {
	if m != nil {
		return m.RegistrationTokens
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "cheers.User")
}

func init() {
	proto.RegisterFile("cheers/user.proto", fileDescriptor_c23a3c39f2a5c2d2)
}

var fileDescriptor_c23a3c39f2a5c2d2 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x3b, 0x4e, 0xc4, 0x40,
	0x0c, 0x86, 0x95, 0x6c, 0x36, 0x0f, 0x2f, 0x42, 0x60, 0x28, 0x2c, 0xaa, 0x40, 0x95, 0x8a, 0x14,
	0xdc, 0x80, 0x03, 0x50, 0x44, 0xd0, 0xd0, 0xac, 0xf2, 0x30, 0xec, 0x08, 0x92, 0x89, 0x3c, 0x13,
	0xb8, 0x14, 0x87, 0x44, 0xe3, 0xb0, 0x2b, 0x3a, 0x7f, 0xdf, 0x6f, 0xcf, 0x48, 0x3f, 0x5c, 0xf6,
	0x07, 0x66, 0x71, 0xf5, 0xe2, 0x58, 0xee, 0x67, 0xb1, 0xde, 0x62, 0xba, 0xaa, 0xbb, 0x9f, 0x18,
	0x92, 0x17, 0xc7, 0x82, 0xe7, 0x10, 0x9b, 0x81, 0xa2, 0x32, 0xaa, 0x8a, 0x26, 0x36, 0x03, 0x22,
	0x24, 0x53, 0x3b, 0x32, 0xc5, 0x6a, 0x74, 0xc6, 0x6b, 0xd8, 0xf2, 0xd8, 0x9a, 0x4f, 0xda, 0xa8,
	0x5c, 0x01, 0x6f, 0x20, 0xff, 0x62, 0x31, 0x6f, 0x86, 0x07, 0x4a, 0xca, 0xa8, 0xca, 0x9b, 0x13,
	0x87, 0x2c, 0x7c, 0xaa, 0x2f, 0x6d, 0xf5, 0xe8, 0xc4, 0x48, 0x90, 0xcd, 0xa6, 0xf7, 0x8b, 0x30,
	0xa5, 0x1a, 0x1d, 0x11, 0x2f, 0x60, 0xd3, 0x19, 0x4b, 0x99, 0xda, 0x30, 0x86, 0xdd, 0x6f, 0xee,
	0x9c, 0xf1, 0x4c, 0xf9, 0xba, 0xfb, 0x87, 0x78, 0x0b, 0x67, 0xf3, 0xc1, 0x4e, 0xbc, 0x9f, 0x96,
	0xb1, 0x63, 0xa1, 0x42, 0xe3, 0x9d, 0xba, 0x27, 0x55, 0xe1, 0xb8, 0x17, 0x6e, 0x3d, 0x0f, 0x04,
	0x65, 0x54, 0xc5, 0xcd, 0x11, 0xb1, 0x86, 0x2b, 0xe1, 0x77, 0xe3, 0xbc, 0xb4, 0xde, 0xd8, 0x69,
	0xef, 0xed, 0x07, 0x4f, 0x8e, 0x76, 0xe5, 0xa6, 0x2a, 0x1a, 0xfc, 0x1f, 0x3d, 0x6b, 0xf2, 0x58,
	0xbc, 0x66, 0xf5, 0xda, 0x5c, 0x97, 0x6a, 0x91, 0x0f, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xba,
	0xb7, 0x0c, 0x6c, 0x5d, 0x01, 0x00, 0x00,
}
